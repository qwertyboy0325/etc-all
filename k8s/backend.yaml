apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: etc-pointcloud
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: gcr.io/YOUR_PROJECT_ID/etc-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_DB
        - name: MINIO_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_HOST
        - name: MINIO_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_PORT
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: MINIO_SECRET_KEY
        - name: MINIO_BUCKET
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_BUCKET
        - name: MINIO_SECURE
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_SECURE
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DEBUG
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: ENVIRONMENT
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: SECRET_KEY
        - name: BACKEND_CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: BACKEND_CORS_ORIGINS
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
      initContainers:
      - name: wait-for-db
        image: postgres:13-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres-service -p 5432 -U root; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: redis:7-alpine
        command: ['sh', '-c', 'until redis-cli -h redis-service -p 6379 ping; do echo waiting for redis; sleep 2; done;']
      - name: wait-for-minio
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -f http://minio-service:9000/minio/health/live; do echo waiting for minio; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: etc-pointcloud
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: etc-pointcloud
  labels:
    app: celery-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
      - name: celery-worker
        image: gcr.io/YOUR_PROJECT_ID/etc-backend:latest
        command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: REDIS_DB
        - name: MINIO_HOST
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_HOST
        - name: MINIO_PORT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_PORT
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: MINIO_SECRET_KEY
        - name: MINIO_BUCKET
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_BUCKET
        - name: MINIO_SECURE
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: MINIO_SECURE
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: DEBUG
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: etc-config
              key: ENVIRONMENT
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: etc-secrets
              key: SECRET_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"



